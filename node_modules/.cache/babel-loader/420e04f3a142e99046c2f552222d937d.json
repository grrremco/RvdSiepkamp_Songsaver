{"ast":null,"code":"var _jsxFileName = \"/Users/remco/Desktop/Winc/Winc_Academy/songsaver/src/components/container.js\";\nimport React, { Component } from \"react\";\nimport SongForm from \"./SongForm\";\nimport SongList from \"./SongList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Container extends Component {\n  constructor() {\n    super();\n\n    this.addSong = song => {\n      const newSong = {\n        id: this.state.songs.length + 1,\n        title: song.title,\n        artist: song.artist,\n        genre: song.genre,\n        rating: song.rating\n      };\n      this.setState({\n        songs: this.state.songs.concat(newSong)\n      });\n    };\n\n    this.sortByAZ = key => {\n      const sortedSongs = [...this.state.songs];\n      sortedSongs.sort((a, b) => a[key].toLowerCase() < b[key].toLowerCase() ? -1 : 1);\n      this.setState({\n        songs: sortedSongs\n      });\n    };\n\n    this.sortByZA = key => {\n      let sortedSongs = [...this.state.songs];\n      sortedSongs.sort((a, b) => a[key].toLowerCase() < b[key].toLowerCase() ? 1 : -1);\n      this.setState({\n        songs: sortedSongs\n      });\n    };\n\n    this.state = {\n      songs: [{\n        id: 1,\n        title: \"Way down we go\",\n        artist: \"KALEO\",\n        genre: \"Other\",\n        rating: \"4\"\n      }, {\n        id: 2,\n        title: \"Deliver Me\",\n        artist: \"The Milk\",\n        genre: \"Rock\",\n        rating: \"5\"\n      }, {\n        id: 3,\n        title: \"ChanChan\",\n        artist: \"Buena Vista Social Club\",\n        genre: \"Cuban\",\n        rating: \"5\"\n      }, {\n        id: 4,\n        title: \"El Mismo Aire\",\n        artist: \"Camilo\",\n        genre: \"Other\",\n        rating: \"5\"\n      }, {\n        id: 5,\n        title: \"Tata fatiguée\",\n        artist: \"Vaudou Game\",\n        genre: \"Afrobeat\",\n        rating: \"4\"\n      }]\n    };\n    this.addSong = this.addSong.bind(this);\n    this.emptyList = this.emptyList.bind(this);\n    this.deleteSong = this.deleteSong.bind(this);\n    this.sortByAZ = this.sortByAZ.bind(this);\n    this.sortByZA = this.sortByZA.bind(this);\n  }\n\n  emptyList() {\n    this.setState({\n      songs: []\n    });\n  }\n\n  deleteSong(id) {\n    const updatedList = this.state.songs.filter(song => {\n      return id !== Number(song.id);\n    });\n    this.setState({\n      songs: updatedList\n    });\n  } ////////////////// sorting songs by key /////////////////////////////\n\n\n  ///////////////////////////////////////////////////////////////////////\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-container\",\n      children: [/*#__PURE__*/_jsxDEV(SongForm, {\n        addSong: this.addSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SongList, {\n        songs: this.state.songs,\n        addSong: this.addSong,\n        emptyList: this.emptyList,\n        deleteSong: this.deleteSong,\n        sortByAZ: this.sortByAZ,\n        sortByZA: this.sortByZA\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Container;","map":{"version":3,"sources":["/Users/remco/Desktop/Winc/Winc_Academy/songsaver/src/components/container.js"],"names":["React","Component","SongForm","SongList","Container","constructor","addSong","song","newSong","id","state","songs","length","title","artist","genre","rating","setState","concat","sortByAZ","key","sortedSongs","sort","a","b","toLowerCase","sortByZA","bind","emptyList","deleteSong","updatedList","filter","Number","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport SongForm from \"./SongForm\"\nimport SongList from \"./SongList\"\n\nclass Container extends Component {\n    constructor() {\n        super()\n        this.state = {\n            songs: [\n                {id:1, title: \"Way down we go\", artist: \"KALEO\", genre:\"Other\", rating:\"4\"},\n                {id:2, title: \"Deliver Me\", artist: \"The Milk\", genre: \"Rock\", rating: \"5\"},\n                {id:3, title: \"ChanChan\", artist: \"Buena Vista Social Club\", genre: \"Cuban\", rating: \"5\"},\n                {id:4, title: \"El Mismo Aire\", artist: \"Camilo\", genre: \"Other\", rating: \"5\"},\n                {id:5, title: \"Tata fatiguée\", artist: \"Vaudou Game\", genre: \"Afrobeat\", rating: \"4\"},\n            ]\n        }\n        this.addSong = this.addSong.bind(this)\n        this.emptyList = this.emptyList.bind(this)\n        this.deleteSong = this.deleteSong.bind(this)\n        this.sortByAZ = this.sortByAZ.bind(this)\n        this.sortByZA = this.sortByZA.bind(this)\n    }\n\n    addSong = (song) => {\n        const newSong = {\n            id: this.state.songs.length +1,\n            title: song.title,\n            artist: song.artist,\n            genre: song.genre,\n            rating: song.rating\n        }\n        this.setState ({songs: this.state.songs.concat(newSong)})\n    }\n\n    emptyList(){\n        this.setState({\n            songs: []\n        })\n    }\n\n    deleteSong (id) {\n        const updatedList = this.state.songs.filter (song => {\n            return id !== Number(song.id)\n        })\n        this.setState({ songs: updatedList })\n    }\n////////////////// sorting songs by key /////////////////////////////\n\n    sortByAZ = (key) => {\n        const sortedSongs = [...this.state.songs]\n        sortedSongs.sort( (a,b) => (a[key].toLowerCase() < b[key].toLowerCase()) ? -1 : 1)\n        this.setState( {songs:sortedSongs} )\n    }\n\n    sortByZA = (key) => {\n        let sortedSongs = [...this.state.songs]\n        sortedSongs.sort( (a,b) => (a[key].toLowerCase() < b[key].toLowerCase()) ? 1 : -1)\n        this.setState( {songs:sortedSongs} )\n    }\n    \n///////////////////////////////////////////////////////////////////////\n    render() {\n        return (\n            <div className = \"song-container\">\n\n                <SongForm \n                    addSong={this.addSong}\n                />\n\n                <SongList \n                    songs= {this.state.songs}\n                    addSong={this.addSong}\n                    emptyList = {this.emptyList}\n                    deleteSong = {this.deleteSong}\n                    sortByAZ = {this.sortByAZ}\n                    sortByZA = {this.sortByZA}\n                />\n                \n            </div>\n        )\n    }\n}\n\nexport default Container;"]},"metadata":{},"sourceType":"module"}